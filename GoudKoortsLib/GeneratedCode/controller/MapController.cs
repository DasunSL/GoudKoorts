//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace controller
{
	using model;
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Text;

	public class MapController
	{
        public Map map
        {
            get;
            set;
        }

		public virtual MainController mainController
		{
			get;
			set;
		}

		public MapController(MainController mainController)
		{
            this.mainController = mainController;
		}

        public void GenerateMap()
        {
            map = new Map();
            map.mapSizeX = 13;
            map.mapSizeY = 10;
            map.fields = new Dictionary<int, Dictionary<int, Field>>();
            
            // First row only water.
            int y = 0;
            Dictionary<int, Field> row = new Dictionary<int, Field>();
            for (int i = 0; i <= 12; i++)
            {
                row[i] = new Water(i, y);
            }
            map.fields[y] = row;


            // Second row ship track fairway. Track goes from right to left.
            y = 1;
            row = new Dictionary<int, Field>();
            // First fairway (left side) doesn't have a next track.
            row[0] = new Fairway(0, y, null);
            for (int i = 1; i <= 12; i++)
            {
                row[i] = new Fairway(i, y, (Fairway)row[i - 1]);
            }
            map.fields[y] = row;


            // 12 train rails going left.
            y = 2;
            row = new Dictionary<int, Field>();
            // First train rail (left side) doesn't have a next track.
            row[0] = new TrainRails(0, y, null, TrainRails.Axis.HORIZONTAL);
            for (int i = 1; i <= 11; i++)
            {
                // Ninth is the dock.
                if (i == 9)
                    row[i] = new Dock(i, y, (TrainRails)row[i - 1], TrainRails.Axis.HORIZONTAL);
                else
                    row[i] = new TrainRails(i, y, (TrainRails)row[i - 1], TrainRails.Axis.HORIZONTAL);
            }
            map.fields[y] = row;


            // Next row is only one track downwards.
            y = 3;
            row = new Dictionary<int, Field>();
            row[11] = new TrainRails(11, y, (TrainRails)map.fields[y - 1][11], TrainRails.Axis.VERTICAL);
            map.fields[y] = row;


            // Next row index 4.
            y = 4;
            row = new Dictionary<int, Field>();
            row[0] = new Warehouse(0, y, 'A');
            map.fields[y] = row;
        }
    }
}

