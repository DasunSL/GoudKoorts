//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace controller
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Timers;
    using view;

    public class MainController
    {
        private Timer intervalTimer;

        private int interval = 5000; // Interval in milliseconds

        public View view
        {
            get;
            set;
        }

        public MapController mapController
        {
            get;
            set;
        }

        public CartsController cartsController
        {
            get;
            set;
        }

        public ShipsController shipsController
        {
            get;
            set;
        }

        public void Initialize()
        {
            // Initialize the controllers.
            view = new View(this);
            mapController = new MapController(this);
            cartsController = new CartsController(this);
            shipsController = new ShipsController(this);

            // Enter start modus.
            EnterStartModus();
        }

        public void EnterStartModus()
        {
            // Render the start screen.
            view.RenderStartScreen();

            // Wait for 's' key to start the game or the 'q' key to quit.
            bool quit = false;
            while (!quit)
            {
                ConsoleKeyInfo key = Console.ReadKey(false); // Get string from user
                switch (key.KeyChar)
                {
                    case 's':
                        // Enter game modus.
                        EnterGameModus();
                        // After game modus is done fall back to start modus again.
                        view.RenderStartScreen();
                        break;
                    case 'q':
                        quit = true;
                        break;
                    default:
                        view.RenderInvalidInputWarning(key.KeyChar);
                        break;
                }
            }
        }

        public void EnterGameModus()
        {
            // Generate the map.
            mapController.GenerateMap();

            // Render the map.
            view.RenderGameScreen(mapController.map);

            // Start the interval timer.
            intervalTimer = new Timer(interval);
            intervalTimer.Elapsed += OnInterval;
            intervalTimer.AutoReset = true;
            intervalTimer.Enabled = true;

            // Loop through input
            bool quit = false;
            while (!quit)
            {
                ConsoleKeyInfo key = Console.ReadKey(false); // Get string from user
                switch (key.KeyChar)
                {
                    case '1':
                    case '2':
                    case '3':
                    case '4':
                    case '5':
                        break;
                    case 'q':
                        quit = true;
                        break;
                    default:
                        view.RenderInvalidInputWarning(key.KeyChar);
                        break;
                }
            }

            // Loop has been ended so the user has quitted. End the game.
            // Kill the timer.
            intervalTimer.Enabled = false;
            intervalTimer.Close();
            intervalTimer = null;

            view.RenderEndScreen();
        }

        private void OnInterval(Object source, ElapsedEventArgs e)
        {
            view.RenderGameScreen(mapController.map);
        }
    }
}

